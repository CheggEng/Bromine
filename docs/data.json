{
    "project": {
        "name": "Chegg eReader"
    },
    "files": {
        "lib/Events/Events.js": {
            "name": "lib/Events/Events.js",
            "modules": {
                "Events": 1
            },
            "classes": {
                "Events": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Bromine.js": {
            "name": "src/Bromine.js",
            "modules": {
                "Bromine": 1
            },
            "classes": {
                "Bromine.Test": 1,
                "Bromine.Tester": 1,
                "Bromine": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/license.js": {
            "name": "src/license.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/utils.js": {
            "name": "src/utils.js",
            "modules": {
                "Bromine.utils": 1
            },
            "classes": {
                "Bind": 1,
                "Options": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "Events": {
            "name": "Events",
            "submodules": {},
            "classes": {
                "Events": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "lib/Events/Events.js",
            "line": 124
        },
        "Bromine": {
            "name": "Bromine",
            "submodules": {},
            "classes": {
                "Bromine.Test": 1,
                "Bromine.Tester": 1,
                "Bromine": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/Bromine.js",
            "line": 405
        },
        "Bromine.utils": {
            "name": "Bromine.utils",
            "submodules": {},
            "classes": {
                "Bind": 1,
                "Options": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/utils.js",
            "line": 43
        }
    },
    "classes": {
        "Events": {
            "name": "Events",
            "shortname": "Events",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Bromine.Test",
                "Bromine.Tester"
            ],
            "module": "Events",
            "namespace": "",
            "file": "lib/Events/Events.js",
            "line": 124,
            "description": "Events Provider.\n\nCan function either as a standalone or a Mixin",
            "is_constructor": 1,
            "params": [
                {
                    "name": "el",
                    "description": "element to use as event target. Optional",
                    "type": "Element"
                }
            ]
        },
        "Bromine.Test": {
            "name": "Bromine.Test",
            "shortname": "Bromine.Test",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Bromine",
            "namespace": "",
            "file": "src/Bromine.js",
            "line": 20,
            "description": "A Test Instance",
            "uses": [
                "Events",
                "Options"
            ],
            "is_constructor": 1,
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "props": [
                        {
                            "name": "init",
                            "description": "a function to execute before tests start",
                            "type": "Function",
                            "optional": true
                        },
                        {
                            "name": "tests",
                            "description": "a queue of functions to run",
                            "type": "Array",
                            "optional": true
                        },
                        {
                            "name": "depend",
                            "description": "a test dependancy",
                            "type": "String",
                            "optional": true
                        },
                        {
                            "name": "fail_timeout",
                            "description": "how much time to wait for tests to finish before reporting failure",
                            "type": "Int",
                            "optional": true,
                            "optdefault": "10s"
                        }
                    ]
                }
            ]
        },
        "Bromine.Tester": {
            "name": "Bromine.Tester",
            "shortname": "Bromine.Tester",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Bromine",
            "namespace": "",
            "file": "src/Bromine.js",
            "line": 211,
            "description": "Test Runner\nTakes care of registering tests, running them and reporting their results",
            "is_constructor": 1,
            "uses": [
                "Events",
                "Options",
                "Bind"
            ],
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object",
                    "optional": true,
                    "props": [
                        {
                            "name": "exclude",
                            "description": "a list of test names to skip",
                            "type": "Array",
                            "optional": true
                        },
                        {
                            "name": "run_only",
                            "description": "if provided, will only run tests that are in it",
                            "type": "Array",
                            "optional": true
                        }
                    ]
                }
            ]
        },
        "Bromine": {
            "name": "Bromine",
            "shortname": "Bromine",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "Bromine",
            "namespace": "",
            "file": "src/Bromine.js",
            "line": 405
        },
        "Bind": {
            "name": "Bind",
            "shortname": "Bind",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Bromine.Tester"
            ],
            "module": "Bromine.utils",
            "namespace": "",
            "file": "src/utils.js",
            "line": 21,
            "description": "this mixin automatically creates a `bound` collection of functions"
        },
        "Options": {
            "name": "Options",
            "shortname": "Options",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [
                "Bromine.Test",
                "Bromine.Tester"
            ],
            "module": "Bromine.utils",
            "namespace": "",
            "file": "src/utils.js",
            "line": 43,
            "description": "A simple mixin for providing and options argument.\nIf the object has a defaultOptions instance it will set them.\n\nmixing also provides the setOptions method.\nother than settting the options, any key with the on* signiture (onLoad, onComplete etc)\nwill be added as an event"
        }
    },
    "classitems": [
        {
            "file": "lib/Events/Events.js",
            "line": 35,
            "description": "removes the on* prefix from event names",
            "itemtype": "method",
            "name": "Events.removeOn",
            "static": 1,
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "Events",
            "module": "Events"
        },
        {
            "file": "lib/Events/Events.js",
            "line": 50,
            "description": "returns a structured data object about a type's pseudo-events",
            "itemtype": "method",
            "name": "getPseudo",
            "access": "private",
            "tagname": "",
            "static": 1,
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "data",
                "type": "Object"
            },
            "class": "Events",
            "module": "Events"
        },
        {
            "file": "lib/Events/Events.js",
            "line": 73,
            "description": "proccesses an event type, returning a valid data object from that name",
            "itemtype": "method",
            "name": "processType",
            "static": 1,
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "data",
                "type": "Object"
            },
            "class": "Events",
            "module": "Events"
        },
        {
            "file": "lib/Events/Events.js",
            "line": 87,
            "description": "cross-browser function to create event object for fire method\n\nCreated object will always have following properties:\n - dispatcher: a reference to dispatching object (since we can't use 'this')\n - args: arguments passed alongside the event\n - object_event: a flag set to true to easily check if this is an object event or a normal DOM event.",
            "itemtype": "method",
            "name": "Events.createEvent",
            "static": 1,
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "dispatcher",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "args",
                    "description": "",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "event object"
            },
            "class": "Events",
            "module": "Events"
        },
        {
            "file": "lib/Events/Events.js",
            "line": 276,
            "description": "Adds an event",
            "itemtype": "method",
            "name": "addEvent",
            "params": [
                {
                    "name": "the",
                    "description": "event type",
                    "type": "String"
                },
                {
                    "name": "a",
                    "description": "function to add",
                    "type": "Function"
                }
            ],
            "chainable": 1,
            "class": "Events",
            "module": "Events"
        },
        {
            "file": "lib/Events/Events.js",
            "line": 306,
            "description": "Helper to add multiple events at once",
            "itemtype": "method",
            "name": "addEvents",
            "params": [
                {
                    "name": "literal",
                    "description": "object of event types => callbacks",
                    "type": "Object"
                }
            ],
            "chainable": 1,
            "class": "Events",
            "module": "Events"
        },
        {
            "file": "lib/Events/Events.js",
            "line": 325,
            "description": "dispatches an event",
            "itemtype": "method",
            "name": "fireEvent",
            "params": [
                {
                    "name": "event",
                    "description": "type",
                    "type": "String"
                },
                {
                    "name": "arguments",
                    "description": "to pass with the event",
                    "type": "Mixed"
                }
            ],
            "chainable": 1,
            "class": "Events",
            "module": "Events"
        },
        {
            "file": "lib/Events/Events.js",
            "line": 364,
            "description": "removes a function from an event",
            "itemtype": "method",
            "name": "removeEvent",
            "params": [
                {
                    "name": "event",
                    "description": "type",
                    "type": "String"
                },
                {
                    "name": "function",
                    "description": "to remove from stack",
                    "type": "Function"
                }
            ],
            "chainable": 1,
            "class": "Events",
            "module": "Events"
        },
        {
            "file": "lib/Events/Events.js",
            "line": 387,
            "description": "Adds an event for one execution, then removes it",
            "itemtype": "method",
            "name": "addEventOnce",
            "params": [
                {
                    "name": "the",
                    "description": "event type",
                    "type": "String"
                },
                {
                    "name": "a",
                    "description": "function to add",
                    "type": "Function"
                }
            ],
            "chainable": 1,
            "class": "Events",
            "module": "Events"
        },
        {
            "file": "lib/Events/Events.js",
            "line": 409,
            "description": "Fires a latched event",
            "itemtype": "method",
            "name": "fireLatchedEvent",
            "params": [
                {
                    "name": "the",
                    "description": "event type",
                    "type": "String"
                },
                {
                    "name": "arguments",
                    "description": "to pass with the event",
                    "type": "Mixed"
                }
            ],
            "chainable": 1,
            "class": "Events",
            "module": "Events"
        },
        {
            "file": "src/Bromine.js",
            "line": 1,
            "description": "Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n  http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.",
            "class": "Bromine.Test",
            "module": "Events"
        },
        {
            "file": "src/Bromine.js",
            "line": 42,
            "description": "holds a stack of reported results",
            "itemtype": "property",
            "name": "results",
            "type": "{Array}",
            "class": "Bromine.Test",
            "module": "Bromine"
        },
        {
            "file": "src/Bromine.js",
            "line": 59,
            "description": "fires when test starts running. Latched",
            "itemtype": "event",
            "name": "start",
            "class": "Bromine.Test",
            "module": "Bromine"
        },
        {
            "file": "src/Bromine.js",
            "line": 63,
            "description": "fires if and when the test has finished running successfuly",
            "itemtype": "event",
            "name": "done",
            "params": [
                {
                    "name": "args",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "results",
                    "description": "the results of the test",
                    "type": "Array"
                }
            ],
            "class": "Bromine.Test",
            "module": "Bromine"
        },
        {
            "file": "src/Bromine.js",
            "line": 69,
            "description": "fires if and when the test has finished running but failed",
            "itemtype": "event",
            "name": "fail",
            "params": [
                {
                    "name": "args",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "results",
                    "description": "the results of the test",
                    "type": "Array"
                }
            ],
            "class": "Bromine.Test",
            "module": "Bromine"
        },
        {
            "file": "src/Bromine.js",
            "line": 75,
            "description": "fires on object destruction",
            "itemtype": "event",
            "name": "destory",
            "class": "Bromine.Test",
            "module": "Bromine"
        },
        {
            "file": "src/Bromine.js",
            "line": 90,
            "description": "runs the tests",
            "itemtype": "method",
            "name": "run",
            "class": "Bromine.Test",
            "module": "Bromine"
        },
        {
            "file": "src/Bromine.js",
            "line": 100,
            "description": "logs a result to the test",
            "itemtype": "method",
            "name": "log",
            "params": [
                {
                    "name": "params",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Bromine.Test",
            "module": "Bromine"
        },
        {
            "file": "src/Bromine.js",
            "line": 109,
            "description": "Called when tests are done",
            "itemtype": "method",
            "name": "done",
            "params": [
                {
                    "name": "state",
                    "description": "whether test passed or failed",
                    "type": "Bool"
                },
                {
                    "name": "message",
                    "description": "only used on failure",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "Bromine.Test",
            "module": "Bromine"
        },
        {
            "file": "src/Bromine.js",
            "line": 130,
            "description": "signifies a test failure. Will stop any more steps from running",
            "itemtype": "method",
            "name": "",
            "type": "Fail",
            "params": [
                {
                    "name": "message",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Bromine.Test",
            "module": "Bromine"
        },
        {
            "file": "src/Bromine.js",
            "line": 168,
            "description": "calls the next function in the stack",
            "itemtype": "method",
            "name": "next",
            "class": "Bromine.Test",
            "module": "Bromine"
        },
        {
            "file": "src/Bromine.js",
            "line": 182,
            "description": "calls the current function in the stack",
            "itemtype": "method",
            "name": "current",
            "class": "Bromine.Test",
            "module": "Bromine"
        },
        {
            "file": "src/Bromine.js",
            "line": 193,
            "description": "calls the previous function in the stack",
            "itemtype": "method",
            "name": "prev",
            "class": "Bromine.Test",
            "module": "Bromine"
        },
        {
            "file": "src/Bromine.js",
            "line": 236,
            "description": "fires when a test starts running",
            "itemtype": "event",
            "name": "start",
            "params": [
                {
                    "name": "args",
                    "description": "",
                    "props": [
                        {
                            "name": "name",
                            "description": "",
                            "type": "String"
                        },
                        {
                            "name": "test",
                            "description": "",
                            "type": "Bromine.Test"
                        }
                    ]
                }
            ],
            "class": "Bromine.Tester",
            "module": "Bromine"
        },
        {
            "file": "src/Bromine.js",
            "line": 243,
            "description": "fires when all tests are done",
            "itemtype": "event",
            "name": "done",
            "params": [
                {
                    "name": "args",
                    "description": "",
                    "props": [
                        {
                            "name": "results",
                            "description": "",
                            "type": "Array"
                        }
                    ]
                }
            ],
            "class": "Bromine.Tester",
            "module": "Bromine"
        },
        {
            "file": "src/Bromine.js",
            "line": 249,
            "description": "fires when a test is done successfuly",
            "itemtype": "event",
            "name": "testDone",
            "params": [
                {
                    "name": "args",
                    "description": "",
                    "props": [
                        {
                            "name": "name",
                            "description": "",
                            "type": "String"
                        },
                        {
                            "name": "test",
                            "description": "",
                            "type": "Bromine.Test"
                        },
                        {
                            "name": "results",
                            "description": "",
                            "type": "Array"
                        }
                    ]
                }
            ],
            "class": "Bromine.Tester",
            "module": "Bromine"
        },
        {
            "file": "src/Bromine.js",
            "line": 257,
            "description": "fires when a test is done but failed",
            "itemtype": "event",
            "name": "testFAil",
            "params": [
                {
                    "name": "args",
                    "description": "",
                    "props": [
                        {
                            "name": "name",
                            "description": "",
                            "type": "String"
                        },
                        {
                            "name": "test",
                            "description": "",
                            "type": "Bromine.Test"
                        },
                        {
                            "name": "results",
                            "description": "",
                            "type": "Array"
                        }
                    ]
                }
            ],
            "class": "Bromine.Tester",
            "module": "Bromine"
        },
        {
            "file": "src/Bromine.js",
            "line": 272,
            "description": "register a test",
            "itemtype": "method",
            "name": "registerTest",
            "params": [
                {
                    "name": "name",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "paramaters",
                    "description": "for Test constructor or a Test instance",
                    "type": "Object|Bromine.Test"
                }
            ],
            "class": "Bromine.Tester",
            "module": "Bromine"
        },
        {
            "file": "src/Bromine.js",
            "line": 303,
            "description": "returns the tests stack",
            "itemtype": "method",
            "name": "getTests",
            "return": {
                "description": "tests",
                "type": "Array"
            },
            "class": "Bromine.Tester",
            "module": "Bromine"
        },
        {
            "file": "src/Bromine.js",
            "line": 312,
            "description": "starts running tests",
            "itemtype": "method",
            "name": "run",
            "class": "Bromine.Tester",
            "module": "Bromine"
        },
        {
            "file": "src/Bromine.js",
            "line": 322,
            "description": "resets test runner",
            "itemtype": "method",
            "name": "reset",
            "class": "Bromine.Tester",
            "module": "Bromine"
        },
        {
            "file": "src/Bromine.js",
            "line": 382,
            "description": "registers a Test reporter",
            "itemtype": "method",
            "name": "registerReporter",
            "params": [
                {
                    "name": "Bromine.Reporter",
                    "description": ""
                }
            ],
            "class": "Bromine.Tester",
            "module": "Bromine"
        },
        {
            "file": "src/Bromine.js",
            "line": 409,
            "description": "Dispatches a DOM event on a given element",
            "itemtype": "method",
            "name": "fireEvent",
            "static": 1,
            "params": [
                {
                    "name": "el",
                    "description": "",
                    "type": "Element"
                },
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Bromine",
            "module": "Bromine"
        },
        {
            "file": "src/Bromine.js",
            "line": 432,
            "description": "Fires a mouse event on element\n\nAdditional parameters can be:\n \n x, y, details, button, ctrl, alt, shift, meta, relatedTarget\n\n if no x/y supplied, will use element position",
            "itemtype": "method",
            "name": "fireMouseEvent",
            "static": 1,
            "params": [
                {
                    "name": "el",
                    "description": "",
                    "type": "Element"
                },
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Bromine",
            "module": "Bromine"
        },
        {
            "file": "src/Bromine.js",
            "line": 481,
            "description": "Fires a keyboard event on element\n\nAdditional parameters can be:\n \n ctrl, alt, shift, meta, key, charCode",
            "itemtype": "method",
            "name": "fireKeyboardEvent",
            "static": 1,
            "params": [
                {
                    "name": "el",
                    "description": "",
                    "type": "Element"
                },
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "Bromine",
            "module": "Bromine"
        },
        {
            "file": "src/Bromine.js",
            "line": 517,
            "description": "Dispatches a DOM event on an element, then dispatches a callback after given delay",
            "itemtype": "method",
            "name": "fireEventWithDelay",
            "static": 1,
            "params": [
                {
                    "name": "el",
                    "description": "",
                    "type": "Element"
                },
                {
                    "name": "type",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                },
                {
                    "name": "delay",
                    "description": "",
                    "type": "Int",
                    "optional": true,
                    "optdefault": "500"
                }
            ],
            "class": "Bromine",
            "module": "Bromine"
        },
        {
            "file": "src/license.js",
            "line": 1,
            "description": "Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n  http://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.",
            "class": "Bind",
            "module": "Bromine"
        },
        {
            "file": "src/utils.js",
            "line": 28,
            "description": "collection of bound function",
            "itemtype": "property",
            "name": "bound",
            "type": "{Object}",
            "access": "protected",
            "tagname": "",
            "class": "Bind",
            "module": "Bromine.utils"
        },
        {
            "file": "src/utils.js",
            "line": 61,
            "itemtype": "method",
            "name": "setOptions",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "chainable": 1,
            "class": "Options",
            "module": "Bromine.utils"
        },
        {
            "file": "src/utils.js",
            "line": 80,
            "description": "calculates the offsets of an element relevant to one of it's parent",
            "itemtype": "method",
            "name": "calculateOffsets",
            "static": 1,
            "params": [
                {
                    "name": "element",
                    "description": "",
                    "type": "Element"
                },
                {
                    "name": "container",
                    "description": "default to `document.body`",
                    "type": "Element",
                    "optional": true
                }
            ],
            "return": {
                "description": "{left, top}",
                "type": "Object"
            },
            "class": "Options",
            "module": "Bromine.utils"
        }
    ]
}